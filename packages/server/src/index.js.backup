const express = require('express');
const cors = require('cors');
const path = require('path');
const { loggingMiddleware } = require('./middleware/logging');
const { initializeSocket } = require('./services/socketService');
const visualEditorRoutes = require('./routes/visualEditor');

const app = express();
const port = process.env.PORT || 3001;

// Middleware
app.use(cors());
app.use(express.json({ limit: '50mb' }));
app.use(express.urlencoded({ extended: true, limit: '50mb' }));
app.use(loggingMiddleware);

// Health check endpoint
app.get('/health', (req, res) => {
  res.json({
    status: 'OK',
    message: 'Claude Code server is running',
    timestamp: new Date().toISOString(),
    port: port,
    uptime: process.uptime(),
    memory: process.memoryUsage(),
    version: '1.0.0'
  });
});

// Visual Editor routes
app.use('/api/editor', visualEditorRoutes);

// Working directory endpoint
app.get('/working-directory', (req, res) => {
  res.json({
    workingDirectory: process.cwd(),
    timestamp: new Date().toISOString()
  });
});

// 404 handler
app.use('*', (req, res) => {
  res.status(404).json({
    error: 'Endpoint not found',
    availableEndpoints: [
      'GET /health',
      'GET /working-directory',
      'POST /api/editor/init',
      'GET /api/editor/scan-components',
      'POST /api/editor/component-source',
      'GET /api/editor/events',
      'POST /api/editor/cleanup',
      'POST /api/editor/files/write',
      'POST /api/editor/files/read',
      'GET /api/editor/files/tree'
    ]
  });
});

// Initialize HTTP server
const server = require('http').createServer(app);

// Initialize Socket.IO
const io = initializeSocket(server);

// Attach io to app for middleware access
app.set('io', io);

// Start server
server.listen(port, () => {
  console.log('🎯 ==========================================');
  console.log(`🚀 Claude Code Server (SDK) running on port ${port}`);
  console.log(`📋 Health check: http://localhost:${port}/health`);
  console.log(`🔧 Working directory: ${process.cwd()}`);
  console.log(`🌐 CORS enabled for all origins`);
  console.log(`📡 Socket.IO enabled on port ${port}`);
  console.log('🎯 ==========================================');
});

// Graceful shutdown
process.on('SIGTERM', () => {
  console.log('🛑 SIGTERM received, shutting down gracefully');
  server.close(() => {
    console.log('✅ Server closed');
    process.exit(0);
  });
});

process.on('SIGINT', () => {
  console.log('🛑 SIGINT received, shutting down gracefully');
  server.close(() => {
    console.log('✅ Server closed');
    process.exit(0);
  });
});

module.exports = app;
